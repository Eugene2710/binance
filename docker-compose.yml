version: "3.8"

services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566" # LocalStack edge port for AWS services
    environment:
      - SERVICES=s3,sqs
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "./.localstack:/var/lib/localstack"
    healthcheck:
      test: [ "CMD", "bash", "-c", "awslocal s3 ls >/dev/null 2>&1 || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 20

  # one-off container to configure/inspect S3 via MinIO Client
  mc:
    image: minio/mc:latest
    container_name: mc
    depends_on:
      localstack:
        condition: service_healthy
    entrypoint: [ "/bin/sh","-c" ]
    command: >
      mc alias set --api S3v4 --path localstack http://localstack:4566 test test &&
      mc ls localstack || true

  setup-s3-notifications:
    build:
      context: .
      dockerfile: Setup_S3_Notifications_Dockerfile
    container_name: setup-s3-notifications
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    depends_on:
      - localstack
    restart: "no"

#  minio:
#    image: minio/minio:latest
#    container_name: minio
#    ports:
#      - "9001:9001" # MinIO Console (Web UI)
#    environment:
#      - MINIO_ROOT_USER=minioadmin
#      - MINIO_ROOT_PASSWORD=minioadmin
#    command: server /data --console-address ":9001"
#    depends_on:
#      - localstack

  clickhouse:
    image: clickhouse/clickhouse-server:24.12
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"   # Native interface
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse-init:
    image: clickhouse/clickhouse-server:24.12
    container_name: clickhouse-init
    depends_on:
      - clickhouse
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=password
    volumes:
      - ./resources/sql:/sql:ro
    entrypoint: >
      sh -c "
        echo 'Waiting for ClickHouse to be ready...' &&
        while ! clickhouse-client --host=clickhouse --user=default --password=password --query='SELECT 1' >/dev/null 2>&1; do
          echo 'ClickHouse not ready, waiting...'
          sleep 2
        done &&
        echo 'ClickHouse is ready, executing initialization scripts...' &&
        clickhouse-client --host=clickhouse --user=default --password=password --multiquery < /sql/klines.sql &&
        echo 'ClickHouse initialization completed successfully'
      "
    restart: "no"

volumes:
  clickhouse_data:
